// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/faysalahmed-dev/wherehouse-order-picklist/ent/category"
	"github.com/faysalahmed-dev/wherehouse-order-picklist/ent/order"
	"github.com/faysalahmed-dev/wherehouse-order-picklist/ent/productitem"
	"github.com/faysalahmed-dev/wherehouse-order-picklist/ent/schema"
	"github.com/faysalahmed-dev/wherehouse-order-picklist/ent/subcategory"
	"github.com/faysalahmed-dev/wherehouse-order-picklist/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescName is the schema descriptor for name field.
	categoryDescName := categoryFields[1].Descriptor()
	// category.NameValidator is a validator for the "name" field. It is called by the builders before save.
	category.NameValidator = categoryDescName.Validators[0].(func(string) error)
	// categoryDescValue is the schema descriptor for value field.
	categoryDescValue := categoryFields[2].Descriptor()
	// category.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	category.ValueValidator = categoryDescValue.Validators[0].(func(string) error)
	// categoryDescCreatedAt is the schema descriptor for created_at field.
	categoryDescCreatedAt := categoryFields[3].Descriptor()
	// category.DefaultCreatedAt holds the default value on creation for the created_at field.
	category.DefaultCreatedAt = categoryDescCreatedAt.Default.(func() time.Time)
	// categoryDescUpdatedAt is the schema descriptor for updated_at field.
	categoryDescUpdatedAt := categoryFields[4].Descriptor()
	// category.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	category.DefaultUpdatedAt = categoryDescUpdatedAt.Default.(func() time.Time)
	// category.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	category.UpdateDefaultUpdatedAt = categoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// categoryDescID is the schema descriptor for id field.
	categoryDescID := categoryFields[0].Descriptor()
	// category.DefaultID holds the default value on creation for the id field.
	category.DefaultID = categoryDescID.Default.(func() uuid.UUID)
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescAmount is the schema descriptor for amount field.
	orderDescAmount := orderFields[1].Descriptor()
	// order.AmountValidator is a validator for the "amount" field. It is called by the builders before save.
	order.AmountValidator = orderDescAmount.Validators[0].(func(string) error)
	// orderDescUnitType is the schema descriptor for unit_type field.
	orderDescUnitType := orderFields[2].Descriptor()
	// order.UnitTypeValidator is a validator for the "unit_type" field. It is called by the builders before save.
	order.UnitTypeValidator = orderDescUnitType.Validators[0].(func(string) error)
	// orderDescCreatedAt is the schema descriptor for created_at field.
	orderDescCreatedAt := orderFields[4].Descriptor()
	// order.DefaultCreatedAt holds the default value on creation for the created_at field.
	order.DefaultCreatedAt = orderDescCreatedAt.Default.(func() time.Time)
	// orderDescUpdatedAt is the schema descriptor for updated_at field.
	orderDescUpdatedAt := orderFields[5].Descriptor()
	// order.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	order.DefaultUpdatedAt = orderDescUpdatedAt.Default.(func() time.Time)
	// order.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	order.UpdateDefaultUpdatedAt = orderDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orderDescID is the schema descriptor for id field.
	orderDescID := orderFields[0].Descriptor()
	// order.DefaultID holds the default value on creation for the id field.
	order.DefaultID = orderDescID.Default.(func() uuid.UUID)
	productitemFields := schema.ProductItem{}.Fields()
	_ = productitemFields
	// productitemDescName is the schema descriptor for name field.
	productitemDescName := productitemFields[1].Descriptor()
	// productitem.NameValidator is a validator for the "name" field. It is called by the builders before save.
	productitem.NameValidator = productitemDescName.Validators[0].(func(string) error)
	// productitemDescCreatedAt is the schema descriptor for created_at field.
	productitemDescCreatedAt := productitemFields[2].Descriptor()
	// productitem.DefaultCreatedAt holds the default value on creation for the created_at field.
	productitem.DefaultCreatedAt = productitemDescCreatedAt.Default.(func() time.Time)
	// productitemDescUpdatedAt is the schema descriptor for updated_at field.
	productitemDescUpdatedAt := productitemFields[3].Descriptor()
	// productitem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	productitem.DefaultUpdatedAt = productitemDescUpdatedAt.Default.(func() time.Time)
	// productitem.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	productitem.UpdateDefaultUpdatedAt = productitemDescUpdatedAt.UpdateDefault.(func() time.Time)
	// productitemDescID is the schema descriptor for id field.
	productitemDescID := productitemFields[0].Descriptor()
	// productitem.DefaultID holds the default value on creation for the id field.
	productitem.DefaultID = productitemDescID.Default.(func() uuid.UUID)
	subcategoryFields := schema.SubCategory{}.Fields()
	_ = subcategoryFields
	// subcategoryDescName is the schema descriptor for name field.
	subcategoryDescName := subcategoryFields[1].Descriptor()
	// subcategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	subcategory.NameValidator = subcategoryDescName.Validators[0].(func(string) error)
	// subcategoryDescDescriptions is the schema descriptor for descriptions field.
	subcategoryDescDescriptions := subcategoryFields[2].Descriptor()
	// subcategory.DescriptionsValidator is a validator for the "descriptions" field. It is called by the builders before save.
	subcategory.DescriptionsValidator = subcategoryDescDescriptions.Validators[0].(func(string) error)
	// subcategoryDescValue is the schema descriptor for value field.
	subcategoryDescValue := subcategoryFields[3].Descriptor()
	// subcategory.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	subcategory.ValueValidator = subcategoryDescValue.Validators[0].(func(string) error)
	// subcategoryDescCreatedAt is the schema descriptor for created_at field.
	subcategoryDescCreatedAt := subcategoryFields[4].Descriptor()
	// subcategory.DefaultCreatedAt holds the default value on creation for the created_at field.
	subcategory.DefaultCreatedAt = subcategoryDescCreatedAt.Default.(func() time.Time)
	// subcategoryDescUpdatedAt is the schema descriptor for updated_at field.
	subcategoryDescUpdatedAt := subcategoryFields[5].Descriptor()
	// subcategory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subcategory.DefaultUpdatedAt = subcategoryDescUpdatedAt.Default.(func() time.Time)
	// subcategory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subcategory.UpdateDefaultUpdatedAt = subcategoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subcategoryDescID is the schema descriptor for id field.
	subcategoryDescID := subcategoryFields[0].Descriptor()
	// subcategory.DefaultID holds the default value on creation for the id field.
	subcategory.DefaultID = subcategoryDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = func() func(string) error {
		validators := userDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = func() func(string) error {
		validators := userDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[3].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescBlocked is the schema descriptor for blocked field.
	userDescBlocked := userFields[5].Descriptor()
	// user.DefaultBlocked holds the default value on creation for the blocked field.
	user.DefaultBlocked = userDescBlocked.Default.(bool)
	// userDescTotalOrders is the schema descriptor for total_orders field.
	userDescTotalOrders := userFields[6].Descriptor()
	// user.DefaultTotalOrders holds the default value on creation for the total_orders field.
	user.DefaultTotalOrders = userDescTotalOrders.Default.(int)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[7].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[8].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
