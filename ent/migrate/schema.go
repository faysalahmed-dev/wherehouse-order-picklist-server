// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_categories", Type: field.TypeUUID, Nullable: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "categories_users_categories",
				Columns:    []*schema.Column{CategoriesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "amount", Type: field.TypeString},
		{Name: "unit_type", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"PICKED", "UNPICKED"}, Default: "UNPICKED"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sub_category_orders", Type: field.TypeUUID, Nullable: true},
		{Name: "user_orders", Type: field.TypeUUID, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_sub_categories_orders",
				Columns:    []*schema.Column{OrdersColumns[7]},
				RefColumns: []*schema.Column{SubCategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "orders_users_orders",
				Columns:    []*schema.Column{OrdersColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SubCategoriesColumns holds the columns for the "sub_categories" table.
	SubCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "descriptions", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "category_sub_categories", Type: field.TypeUUID, Nullable: true},
		{Name: "user_sub_categories", Type: field.TypeUUID, Nullable: true},
	}
	// SubCategoriesTable holds the schema information for the "sub_categories" table.
	SubCategoriesTable = &schema.Table{
		Name:       "sub_categories",
		Columns:    SubCategoriesColumns,
		PrimaryKey: []*schema.Column{SubCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sub_categories_categories_sub_categories",
				Columns:    []*schema.Column{SubCategoriesColumns[6]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "sub_categories_users_sub_categories",
				Columns:    []*schema.Column{SubCategoriesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 25},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"ADMIN", "USER"}, Default: "USER"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoriesTable,
		OrdersTable,
		SubCategoriesTable,
		UsersTable,
	}
)

func init() {
	CategoriesTable.ForeignKeys[0].RefTable = UsersTable
	OrdersTable.ForeignKeys[0].RefTable = SubCategoriesTable
	OrdersTable.ForeignKeys[1].RefTable = UsersTable
	SubCategoriesTable.ForeignKeys[0].RefTable = CategoriesTable
	SubCategoriesTable.ForeignKeys[1].RefTable = UsersTable
}
